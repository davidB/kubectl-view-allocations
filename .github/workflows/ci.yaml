name: ci-flow

on:
  pull_request:
  push:
    branches:
      - master
      - "releases/*"
    # tags-ignore:
    #   - "[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        rust_toolchain: ["stable"]
        os:
          - imageName: ubuntu-latest
            profile_rustup: default
            profile_ci_flow: ci-static-code-analysis-tasks
            target_platform: x86_64-unknown-linux-gnu
          - target_platform: x86_64-apple-darwin
            imageName: "macOS-latest"
            profile_rustup: minimal
            profile_ci_flow: none
          # - imageName: "macOS-latest"
          #   profile_rustup: minimal
          #   profile_ci_flow: none
          #   target_platform: aarch64-apple-darwin
          # - imageName: windows-latest
          #   profile_rustup: minimal
          #   profile_ci_flow: none
          #   target_platform:

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          target: ${{ matrix.os.target_platform }}
          override: true
          profile: ${{ matrix.os.profile_rustup }}
      - uses: davidB/rust-cargo-make@v1
      - name: Run tests
        run: cargo make --disable-check-for-updates --profile "${{ matrix.os.profile_ci_flow }}" ci-flow
        env:
          TARGET: ${{ matrix.os.target_paddlatform }}
          # for list of xcode sdk see https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners#xcode
          # DEVELOPER_DIR: "/Applications/Xcode_11.app/Contents/Developer"
          CARGO_MAKE_RUN_CODECOV: "false"
          # to have CODECOV_TOKEN go to https://codecov.io/gh/${GITHUB_USER}/${GITHUB_REPO}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration:
    # Integration tests are linux only
    runs-on: ubuntu-latest
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          # version: v1.20
          # k3d-kube
          k3d-name: kube
          # Used to avoid rate limits when fetching the releases from k3s repo.
          # Anonymous access is limited to 60 requests / hour / worker
          # github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run on k3d
        run: cargo run
